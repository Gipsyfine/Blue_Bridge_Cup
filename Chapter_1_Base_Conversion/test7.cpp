// 明码（2018年试题B）
# include <iostream>
# include <bitset>
using namespace std; // 这里是C++的头文件，包括iostream和bitset库。

int main()
{
    int n,num=0; // 这里定义了两个整型变量，n用于存储输入的整数，num用于记录已经处理过的整数的数量。

    for(int i=1;i<=10;i++)
    {
        for(int j=0;j<32;j++)
        {
            cin >> n; // 这里开始一个嵌套循环，外层循环执行10次，内层循环执行32次。cin语句读取输入的整数存储到变量n中。

            if(n<0) n+=128; // 如果读入的整数是负数，就将它加上128，这是因为需要将有符号整数转化为无符号整数来正确处理。
            
            bitset<8>b(n); // 将变量n存储的整数转换成8位二进制的形式，存储到名为b的bitset类型对象中。
           
            cout << b; // 输出b中存储的8位二进制数。

            num++; 
            if(num%2==0) cout << endl; // 如果已经处理了两个整数，就在输出中换行，以使每行输出16个二进制数。
        }
    }
    return 0;
}

// 答案：九的九次方等于多少？
// 387420489

// 这题很恶心

/*
有符号整数和无符号整数的二进制表示方式不同，
当使用C++中的 bitset 类型对象时，需要使用无符号整数的二进制表示方式。
如果直接使用有符号整数，会导致负数的二进制表示方式不正确，从而影响程序的运行结果。
将有符号整数转换成无符号整数可以解决这个问题。
在这段代码中，当读取的整数是负数时，通过将它加上128的方式转换成无符号整数，确保了程序的正确性。
*/
